
struct A {
 static int x; public: static int __offset_x;
 void fxn(){ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_A__x=(int*)(sstmac_global_data + A::__offset_x); {
  (*sstmac_A__x) -= 1;
  }}
};

namespace ns {
struct B {
 static int x; public: static int __offset_x;
};
namespace ns2 {
 struct C {
  static int x; public: static int __offset_x;
 };
}
}

int ns::B::x = 42;namespace ns {int B::__offset_x = sstmac::inplace_cpp_global<B,int>(false,42);}
int A::x = 5;int A::__offset_x = sstmac::inplace_cpp_global<A,int>(false,5);
namespace ns {
 namespace ns2 {
  int C::x = 10;int C::__offset_x = sstmac::inplace_cpp_global<C,int>(false,10);
 }
}

void fxn()
{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_A__x=(int*)(sstmac_global_data + A::__offset_x); int* sstmac___ns__B__x=(int*)(sstmac_global_data + ::ns::B::__offset_x); int* sstmac___ns__ns2__C__x=(int*)(sstmac_global_data + ::ns::ns2::C::__offset_x); {
  (*sstmac___ns__B__x) += 1;
  (*sstmac___ns__ns2__C__x) -= 3;
  (*sstmac_A__x) = 10;
 }};
#include <sstmac/software/process/global.h>

