
int x = 0;void* __ptr_x = &x; int __sizeof_x = sizeof(x); extern int __offset_x; 

struct A {
  int x;
} aInst{};void* __ptr_aInst = &aInst; int __sizeof_aInst = sizeof(aInst); extern int __offset_aInst; sstmac::CppGlobal* aInst_sstmac_ctor = sstmac::new_cpp_global<struct A>(__offset_aInst,false); 

void fxn()
{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); struct A* sstmac_aInst=(struct A*)(sstmac_global_data + __offset_aInst); {
  auto l1 = [&]{
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
  };

  auto l2 = [=]{
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
  };

  auto l3 = []{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); struct A* sstmac_aInst=(struct A*)(sstmac_global_data + __offset_aInst); {
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
   }};

  auto l4 = [aInst=(*sstmac_aInst)]{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); struct A* sstmac_aInst=(struct A*)(sstmac_global_data + __offset_aInst); {
    int y = aInst.x;
    (*sstmac_x) += 5;
   }};

  auto l5 = [x=(*sstmac_x)]{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); struct A* sstmac_aInst=(struct A*)(sstmac_global_data + __offset_aInst); {
    (*sstmac_aInst).x = 0;
    int y = x;
   }};

  auto l6 = [=,x=(*sstmac_x)]{
    (*sstmac_aInst).x = 0;
    int y = x;
  };
 }}
#include <sstmac/software/process/global.h>

int __offset_aInst = 0;
extern int __sizeof_aInst;
extern void* __ptr_aInst;
sstmac::GlobalVariable __gv_aInst(__offset_aInst,__sizeof_aInst,"aInst",__ptr_aInst,false);
int __offset_x = 0;
extern int __sizeof_x;
extern void* __ptr_x;
sstmac::GlobalVariable __gv_x(__offset_x,__sizeof_x,"x",__ptr_x,false);
