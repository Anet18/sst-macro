/** \page page_FTQTutorial Fixed-Time Quanta Charts

<!-- !TEX root = manual.tex-->

<br>


\image html figures/gnuplot/ftq/ftq.png
<b>Figure 17:</b> Application Activity (Fixed-Time Quanta; FTQ) for Simple MPI Test Suite

<br><br>
\section sec_tutorials_ftq Fixed-Time Quanta Charts
Another way of visualizing application activity is a fixed-time quanta (FTQ) chart.
While the call graph gives a very detailed profile of what code regions are most important for the application, they lack temporal information.
The FTQ histogram gives a time-dependent profile of what the application is doing (Figure 17).
This can be useful for observing the ratio of communication to computation.
It can also give a sense of how "steady'' the application is, 
i.e. if the application oscillates between heavy computation and heavy communication or if it keeps a constant ratio.
In the simple example, Figure 17, we show the FTQ profile of a simple MPI test suite with random computation mixed in.
In general, communication (MPI) dominates.  However, there are a few compute-intensive and memory-intensive regions.

The FTQ visualization is activated by another input parameter

\code{.sh}

ftq_trace = true

\endcode

After running, two new files appear in the folder: <tt>plot_app1.p</tt> and <tt>ftq_app1.dat</tt>.
<tt>plot_app1.p</tt> is a Gnuplot script that generates the histogram as a postscript file.

\code{.sh}

gnuplot plot_app1.p > output.ps

\endcode
Gnuplot can be downloaded from <a href="http://www.gnuplot.info">http://www.gnuplot.info</a> or installed via MacPorts.
We recommend version 4.4, but at least 4.2 should be compatible.

The granularity of the chart is controlled by the <tt>ftq_epoch</tt> parameter in the input file. 
The above figure was collected with

\code{.sh}

ftq_epoch=5us

\endcode
Events are accumulated into a single data point per "epoch.''
If the timestamp is too small, too little data will be collected and the time interval won't be large enough to give a meaningful picture.
If the timestamp is too large, too many events will be grouped togther into a single data point, losing temporal structure.

*/